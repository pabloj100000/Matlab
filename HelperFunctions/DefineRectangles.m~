function [squares]= DefineRectangles(squares, screen)
    % Usage: DefineRectangles(20, [700 700], [0 0])
    % Devide a portion of the screen defined by the "upperLeft" pixel and
    % "size(1)" pixels vertical and "size(2)" pixels wide into
    % squares of size "checkerSize"
    % UpperLeft are coordinates with respect to the whole screen. NOT with
    % respect to the area filled with checkers (otherwise they will always
    % be [0 0])
    NumHBoxes=ceil(screen.size(1)/squares.size);
    NumVBoxes=ceil(screen.size(2)/squares.size);

    squares.squaresN = NumHBoxes * NumVBoxes;

    % Define the rectangles array 4xNumber of total checkers
    squares.squares=zeros(4,squares.squaresN);
    
    % if user defined a screenSize then the left and top pixels of the
    % 1st square are not 0
    startX = squares.upperLeft(1);
    startY = squares.upperLeft(2);
    
    m1 = ones(NumVBoxes,1)*(startX:squares.size:(startX + NumHBoxes*squares.size-squares.size));
    squares.squares(1,:) = reshape(m1',1,squares.squaresN)';
    squares.squares(3,:) = squares.squares(1,:) + squares.size;
    m1 = ones(NumHBoxes,1)*(startY:squares.size:startY + NumVBoxes*squares.size-squares.size);
    squares.squares(2,:) = reshape(m1,1,squares.squaresN);
    squares.squares(4,:) = squares.squares(2,:) + squares.size;
end

